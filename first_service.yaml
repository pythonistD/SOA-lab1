openapi: 3.0.3
info:
  title: Dragon Management API
  description: API для управления коллекцией объектов типа Dragon
  version: 1.0.0
paths:
  /dragons:
    get:
      summary: Получить все объекты Dragon с поддержкой сортировки, фильтрации и постраничного вывода
      parameters:
        - in: query
          name: filter
          schema:
            type: array
            items:
              type: string
              example: id-gt-5,name-eq-Draco,age-lte-100
          style: form
          explode: false
          description: |
            Набор фильтров для полей дракона в формате `поле-оператор-значение`, разделенные запятыми. 
            Операторы:
            - `eq`: равно
            - `neq`: не равно
            - `gt`: больше
            - `gte`: больше или равно
            - `lt`: меньше
            - `lte`: меньше или равно
            Примеры фильтров:
            - `id-gt-5` (id больше 5)
            - `name-eq-Draco` (имя равно Draco)
            - `age-lte-100` (возраст меньше или равен 100)

        - in: query
          name: sort
          schema:
            type: array
            items:
              type: string
              example: name-asc,age-desc
          style: form
          explode: false
          description: |
            Набор полей для сортировки в формате `поле-order`, разделенные запятыми. 
            Возможные значения `order`: `asc` (по возрастанию) или `desc` (по убыванию).
            Пример: `name-asc,age-desc` (сортировка по имени по возрастанию и по возрасту по убыванию).

        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
          description: Номер страницы (по умолчанию 1)

        - in: query
          name: size
          schema:
            type: integer
            minimum: 1
            maximum: 100
          description: Количество элементов на странице (по умолчанию 10, максимум 100)

      responses:
        '200':
          description: Список объектов Dragon
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Dragons'
              examples:
                example1:
                  value: |
                    <dragons>
                      <dragon>
                        <id>1</id>
                        <name>Draco</name>
                        <coordinates>
                          <x>10</x>
                          <y>-5.5</y>
                        </coordinates>
                        <creationDate>2023-09-05</creationDate>
                        <age>150</age>
                        <wingspan>20</wingspan>
                        <speaking>true</speaking>
                        <color>RED</color>
                        <head>
                          <eyesCount>2.0</eyesCount>
                        </head>
                      </dragon>
                      <dragon>
                        <id>2</id>
                        <name>Smaug</name>
                        <coordinates>
                          <x>20</x>
                          <y>-10.5</y>
                        </coordinates>
                        <creationDate>2023-09-04</creationDate>
                        <age>200</age>
                        <wingspan>25</wingspan>
                        <speaking>false</speaking>
                        <color>BLACK</color>
                        <head>
                          <eyesCount>3.0</eyesCount>
                        </head>
                      </dragon>
                      <dragon>
                        <id>3</id>
                        <name>Falkor</name>
                        <coordinates>
                          <x>15</x>
                          <y>-2.0</y>
                        </coordinates>
                        <creationDate>2023-09-03</creationDate>
                        <age>100</age>
                        <wingspan>22</wingspan>
                        <speaking>true</speaking>
                        <color>WHITE</color>
                        <head>
                          <eyesCount>1.0</eyesCount>
                        </head>
                      </dragon>
                    </dragons>
        '400':
          description: Неправильные параметры запроса. Проверьте фильтры, сортировку, номер страницы и размер.
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorIQP'
        '404':
          description: Ресурс не найден
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorDefault'
        '500':
          description: Ошибка на стороне сервера
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorISE'

    post:
      summary: Создать новый объект Dragon
      requestBody:
        required: true
        content:
          application/xml:
            schema:
              $ref: '#/components/schemas/Dragon'
      responses:
        '201':
          description: Объект Dragon создан
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Dragon'
        '400':
          description: Не были переданы все необходимые параметры в теле запроса
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorIQP'
        '404':
          description: Ресурс не найден
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorDefault'
        '500':
          description: Ошибка на стороне сервера
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorISE'

  /dragons/{id}:
    get:
      summary: Получить объект Dragon по ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minimum: 1
      responses:
        '200':
          description: Объект Dragon найден
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Dragon'
        '400':
          description: Не правильные параметры запроса
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorIQP'
        '404':
          description: Ресурс не найден
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorDefault'
        '500':
          description: Ошибка на стороне сервера
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorISE'

    put:
      summary: Обновить объект Dragon по ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minimum: 1
      requestBody:
        required: true
        content:
          application/xml:
            schema:
              $ref: '#/components/schemas/Dragon'
      responses:
        '200':
          description: Объект Dragon обновлен
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Dragon'
        '400':
          description: Не правильные параметры запроса
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorIQP'
        '404':
          description: Ресурс не найден
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorDefault'
        '500':
          description: Ошибка на стороне сервера
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorISE'


    delete:
      summary: Удалить объект Dragon по ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minimum: 1
      responses:
        '204':
          description: Объект Dragon успешно удален
        '400':
          description: Не правильные параметры запроса
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorIQP'
        '404':
          description: Ресурс не найден
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorDefault'
        '500':
          description: Ошибка на стороне сервера
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorISE'

  /dragons/count:
    get:
      summary: Вернуть количество объектов Dragon с заданным количеством глаз у головы
      parameters:
        - in: query
          name: eyesCount
          schema:
            type: number
            format: double
            nullable: true
          description: Значение поля eyesCount у головы дракона (DragonHead). Поле может быть null.
      responses:
        '200':
          description: Количество объектов Dragon с заданным значением eyesCount
          content:
            application/xml:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: Количество объектов Dragon
                xml:
                  name: dragonCount
              examples:
                countResponse:
                  value: |
                    <dragonCount>
                      <count>5</count>
                    </dragonCount>
        '400':
          description: Не правильные параметры запроса
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorIQP'
        '404':
          description: Ресурс не найден
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorDefault'
        '500':
          description: Ошибка на стороне сервера
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorISE'

  /dragons/countByColor:
    get:
      summary: Вернуть количество объектов Dragon с цветом больше заданного
      parameters:
        - in: query
          name: color
          schema:
            $ref: '#/components/schemas/Color'
          description: |
            Цвет дракона, начиная с которого производится подсчет. 
            Цвета имеют упорядоченные значения: RED < BLACK < BLUE < WHITE.
      responses:
        '200':
          description: Количество объектов Dragon с цветом больше заданного
          content:
            application/xml:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: Количество объектов Dragon
                xml:
                  name: dragonCount
              examples:
                countResponse:
                  value: |
                    <dragonCount>
                      <count>3</count>
                    </dragonCount>
        '400':
          description: Не правильные параметры запроса
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorIQP'
        '404':
          description: Ресурс не найден
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorDefault'
        '500':
          description: Ошибка на стороне сервера
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorISE'

  /dragons/searchByName:
    get:
      summary: Вернуть массив объектов Dragon, имя которых содержит заданную подстроку
      parameters:
        - in: query
          name: substring
          schema:
            type: string
            minLength: 1
          required: true
          description: Подстрока для поиска в поле name объектов Dragon. Подстрока не должна быть пустой.
      responses:
        '200':
          description: Массив объектов Dragon, имя которых содержит заданную подстроку
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Dragons'
              examples:
                searchResponse:
                  value: |
                    <dragons>
                      <dragon>
                        <id>1</id>
                        <name>Draco</name>
                        <coordinates>
                          <x>10</x>
                          <y>-5.5</y>
                        </coordinates>
                        <creationDate>2023-09-05</creationDate>
                        <age>150</age>
                        <wingspan>20</wingspan>
                        <speaking>true</speaking>
                        <color>RED</color>
                        <head>
                          <eyesCount>2.0</eyesCount>
                        </head>
                      </dragon>
                      <dragon>
                        <id>3</id>
                        <name>Falkor</name>
                        <coordinates>
                          <x>15</x>
                          <y>-2.0</y>
                        </coordinates>
                        <creationDate>2023-09-03</creationDate>
                        <age>100</age>
                        <wingspan>22</wingspan>
                        <speaking>true</speaking>
                        <color>WHITE</color>
                        <head>
                          <eyesCount>1.0</eyesCount>
                        </head>
                      </dragon>
                    </dragons>
        '400':
          description: Не правильные параметры запроса
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorIQP'
        '404':
          description: Ресурс не найден
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorDefault'
        '500':
          description: Ошибка на стороне сервера
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorISE'

components:
  schemas:
    Dragon:
      type: object
      xml:
        name: dragon
      properties:
        id:
          type: integer
          minimum: 1
          readOnly: true
          description: Значение должно генерироваться автоматически, уникально и больше 0.
          xml:
            attribute: true
        name:
          type: string
          minLength: 1
          description: Поле не может быть null или пустым.
        coordinates:
          $ref: '#/components/schemas/Coordinates'
          description: Поле не может быть null.
        creationDate:
          type: string
          format: date
          readOnly: true
          description: Дата создания должна генерироваться автоматически.
        age:
          type: integer
          minimum: 1
          nullable: true
          description: Возраст должен быть больше 0 или null.
        wingspan:
          type: integer
          minimum: 1
          nullable: true
          description: Размах крыльев должен быть больше 0 или null.
        speaking:
          type: boolean
        color:
          $ref: '#/components/schemas/Color'
          description: Поле не может быть null.
        head:
          $ref: '#/components/schemas/DragonHead'
      required:
        - id
        - name
        - coordinates
        - creationDate
        - color
        - speaking

    Dragons:
      type: object
      xml:
        name: dragons
      properties:
        dragon:
          type: array
          items:
            $ref: '#/components/schemas/Dragon'
      required:
        - dragon

    Coordinates:
      type: object
      xml:
        name: coordinates
      properties:
        x:
          type: integer
          maximum: 411
          description: Поле не может быть null.
        y:
          type: number
          format: float
          description: Поле не может быть null.

    DragonHead:
      type: object
      xml:
        name: head
      properties:
        eyesCount:
          type: number
          format: float
          description: Количество глаз должно быть больше 0.

    Color:
      type: string
      enum:
        - RED
        - BLUE
        - GREEN
        - BLACK
        - WHITE
      description: Цвет дракона

    ErrorResponse:
      type: object
      required:
        - code
        - message
        - time
      xml:
        name: error
      properties:
        code:
          type: integer
          description: Код ошибки
        message:
          type: string
          description: Описание ошибки
        time:
          type: string
          example: "2023-09-12T00:00:00Z"
    ErrorIQP:
      type: object
      required:
        - code
        - message
        - time
      xml:
        name: error
      properties:
        code:
          type: integer
          format: int32
          example: 400
        message:
          type: string
          example: Invalid query param
        time:
          type: string
          example: "2023-09-12T00:00:00Z"
    ErrorISE:
      type: object
      required:
        - code
        - message
        - time
      xml:
        name: error
      properties:
        code:
          type: integer
          format: int32
          example: 500
        message:
          type: string
          example: Internal server error
        time:
          type: string
          example: "2023-09-12T00:00:00Z"
    ErrorII:
      type: object
      required:
        - code
        - message
        - time
      xml:
        name: error
      properties:
        code:
          type: integer
          format: int32
          example: 400
        message:
          type: string
          example: Invalid input
        time:
          type: string
          example: "2023-09-12T00:00:00Z"
    ErrorDefault:
      type: object
      required:
        - code
        - message
        - time
      xml:
        name: error
      properties:
        code:
          type: integer
          format: int32
          example: 404
        message:
          type: string
          example: Not Found
        time:
          type: string
          example: "2023-09-12T00:00:00Z"